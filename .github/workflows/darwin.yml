name: build-darwin-env

on:
  push:
    branches:
    - 'master'
    paths:
    - darwin/**
    - .github/workflows/darwin.yml
    - home/darwin.nix
    - home/desktop.nix
    - home/base.nix
    - '!darwin/**.md'
    - '!**.md'
    - flake.lock
  workflow_dispatch:
  schedule:
  - cron: "0 0 * * Sat"

jobs:
  build-macos-env:
    name: Build macOS Nix env
    runs-on: macos-15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Tailnet
      env:
        HOSTNAME: github-actions-nixos-configs-darwin
      #uses: tailscale/github-action@v3
      uses: propelinc/tailscale-github-action@main
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        determinate: true

    - name: Set up binary cache
      env:
        ATTIC_PUBKEY: ${{ secrets.ATTIC_DARWIN_PUBKEY }}
        ATTIC_CACHE: "http://attic/nix-darwin"
      run: |
        sudo tee -a /etc/nix/nix.conf > /dev/null <<EOF
        extra-substituters = $ATTIC_CACHE
        extra-trusted-public-keys = $ATTIC_PUBKEY
        EOF

    - name: Build macos-desktop output
      env:
        ATTIC_TOKEN: ${{ secrets.ATTIC_TOKEN }}
      run: |
        # Create /run directory
        echo -e "run\tprivate/var/run" | sudo tee -a /etc/synthetic.conf >/dev/null
        /System/Library/Filesystems/apfs.fs/Contents/Resources/apfs.util -t &>/dev/null || true
        # Configure attic
        mkdir -p ~/.config/attic
        printf "default-server = \"kube\"\n\n[servers.kube]\nendpoint = \"http://attic\"\ntoken = \"$ATTIC_TOKEN\"" > ~/.config/attic/config.toml
        # Build macos-desktop output
        nix build .#darwinConfigurations.mac-mini.system
        nix run "github:nixos/nixpkgs/nixpkgs-unstable#attic-client" -- push nix-darwin ./result
