name: build-linux-outputs

on:
  push:
    branches:
    - 'master'
    paths:
    - nixos/**
    - home/**
    - .github/workflows/linux.yml
    - '!nixos/**.md'
    - '!home/**.md'
    - '!**.md'
  workflow_dispatch:
  schedule:
  - cron: "0 0 * * Sat"

jobs:
  build-linux-env:
    name: Build Linux outputs (x86_64)
    runs-on: [ubuntu-24.04]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Tailnet
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        determinate: true

    - name: Set up binary cache
      run: |
        sudo tee -a /etc/nix/nix.conf > /dev/null <<EOF
        extra-substituters = http://attic/nixos
        extra-trusted-public-keys = nixos:uRCswSsap/ho6e2Vp4HXpH9SMdN4rW62N8Uq3r+mQ5E=
        EOF

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main

    - name: Build Linux outputs
      shell: bash
      env:
        ATTIC_TOKEN: ${{ secrets.ATTIC_TOKEN }}
      run: |
        mkdir -p ~/.config/attic
        printf "default-server = \"kube\"\n\n[servers.kube]\nendpoint = \"http://attic\"\ntoken = \"$ATTIC_TOKEN\"" > ~/.config/attic/config.toml
        nix run nixpkgs#nixos-rebuild -- build --flake .#nixos-server
        nix run "github:zhaofengli/attic/47752427561f1c34debb16728a210d378f0ece36#attic-client" -- push nixos ./result
        nix run nixpkgs#nixos-rebuild -- build --flake .#nixos-desktop --impure
        nix run "github:zhaofengli/attic/47752427561f1c34debb16728a210d378f0ece36#attic-client" -- push nixos ./result

  build-linux-arm64-env:
    name: Build Linux outputs (ARM64)
    runs-on: [ubuntu-24.04-arm]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Tailnet
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
        extra_nix_config: |
          extra-substituters = http://attic/nixos
          extra-trusted-public-keys = nixos:uRCswSsap/ho6e2Vp4HXpH9SMdN4rW62N8Uq3r+mQ5E=

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main

    - name: Build Linux outputs
      shell: bash
      env:
        ATTIC_TOKEN: ${{ secrets.ATTIC_TOKEN }}
      run: |
        mkdir -p ~/.config/attic
        printf "default-server = \"kube\"\n\n[servers.kube]\nendpoint = \"http://attic\"\ntoken = \"$ATTIC_TOKEN\"" > ~/.config/attic/config.toml
        nix run nixpkgs#nixos-rebuild -- build --flake .#nixos-server
        nix run "github:zhaofengli/attic/47752427561f1c34debb16728a210d378f0ece36#attic-client" -- push nixos ./result
        nix run nixpkgs#nixos-rebuild -- build --flake .#nixos-desktop --impure
        nix run "github:zhaofengli/attic/47752427561f1c34debb16728a210d378f0ece36#attic-client" -- push nixos ./result
